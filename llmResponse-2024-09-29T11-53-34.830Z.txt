```js
// App.js
import React, { useState } from 'react';
import { StyleSheet, Text, View, TextInput, TouchableOpacity, ScrollView } from 'react-native';
import axios from 'axios';

const App = () => {
  const [website, setWebsite] = useState('');
  const [valuation, setValuation] = useState(null);
  const [loading, setLoading] = useState(false);

  const generateValuation = async () => {
    if (!website) {
      alert('Please enter a website URL');
      return;
    }

    setLoading(true);
    try {
      const response = await axios.post('https://apihub.staging.appply.link/chatgpt', {
        messages: [
          { 
            role: "system", 
            content: "You are an AI assistant specialized in M&A valuations. Provide a brief valuation estimate based on the given website." 
          },
          { 
            role: "user", 
            content: `Generate a brief valuation estimate for the company owning this website: ${website}. Include estimated revenue, profit, and overall valuation. Use realistic figures based on the website's apparent size and industry.` 
          }
        ],
        model: "gpt-4o"
      });

      const result = response.data.response;
      setValuation(result);
    } catch (error) {
      console.error('Error generating valuation:', error);
      alert('Failed to generate valuation. Please try again.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>M&A Valuation Generator</Text>
      <TextInput
        style={styles.input}
        onChangeText={setWebsite}
        value={website}
        placeholder="Enter website URL"
        placeholderTextColor="#888"
      />
      <TouchableOpacity 
        style={styles.button} 
        onPress={generateValuation}
        disabled={loading}
      >
        <Text style={styles.buttonText}>
          {loading ? 'Generating...' : 'Generate Valuation'}
        </Text>
      </TouchableOpacity>
      <ScrollView style={styles.resultContainer}>
        {valuation && (
          <Text style={styles.resultText}>{valuation}</Text>
        )}
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: '#333',
  },
  input: {
    width: '100%',
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 5,
    paddingHorizontal: 10,
    marginBottom: 20,
    backgroundColor: 'white',
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 10,
    borderRadius: 5,
    width: '100%',
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: 'bold',
  },
  resultContainer: {
    marginTop: 20,
    width: '100%',
    maxHeight: 300,
    backgroundColor: 'white',
    borderRadius: 5,
    padding: 10,
  },
  resultText: {
    fontSize: 16,
    color: '#333',
  },
});

export default App;
// End of App.js
```